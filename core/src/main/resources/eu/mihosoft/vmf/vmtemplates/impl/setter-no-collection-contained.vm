#if(${prop.propType} != "COLLECTION" && !${prop.container} && ${prop.contained} && !${prop.crossRefProperty})
  // ----------------------------------------
  // return early if identical value has been set
  // ----------------------------------------
  if (this.__vmf_prop_$prop.name == $prop.name) {
    return;
  }
  // ----------------------------------------

  // ----------------------------------------
  // unregister current value from previous container
  // ----------------------------------------
  if(this.__vmf_prop_${prop.name} != null) {
    ${VMFPKG_INT}.VObjectInternalModifiable value_internal = (${VMFPKG_INT}.VObjectInternalModifiable)this.__vmf_prop_${prop.name};
    value_internal._vmf_unregisterFromContainers();
  } // end if ${prop.name} != null      
  // ----------------------------------------
  // unregister new value from previous containers
  // ----------------------------------------
  if(${prop.name} != null) {
    ${VMFPKG_INT}.VObjectInternalModifiable value_internal = (${VMFPKG_INT}.VObjectInternalModifiable)${prop.name};
    value_internal._vmf_unregisterFromContainers();    
  }

  // ----------------------------------------
  // register with new container (container name: ${prop.containmentInfo.opposite.name})
  // ----------------------------------------
  if(${prop.name} != null) {
    ${VMFPKG_INT}.VObjectInternalModifiable value_internal = (${VMFPKG_INT}.VObjectInternalModifiable)${prop.name};
    ${VMFPKG}.VObject oldContainer = value_internal._vmf_getContainer(); 
    value_internal._vmf_setContainer(this);
#if(${prop.containmentInfo.opposite})## opposite
    value_internal._vmf_setContainerPropertyId(value_internal._vmf_getPropertyIdByName("${prop.containmentInfo.opposite.name}"));
    ((__VMF_TYPE_${prop.simpleTypeName}Impl)value_internal)._vmf_firePropertyChangeIfListenersArePresent("${prop.containmentInfo.opposite.name}", oldContainer, this, ${VMFPKG_INT}.ChangeInternal.CHANGE_TYPE_CONTAINMENT);
#else##                                      ## opposite
    ((__VMF_TYPE_${prop.simpleTypeName}Impl)value_internal)._vmf_firePropertyChangeIfListenersArePresent("__vmf_prop_unnamed_container", oldContainer, this, ${VMFPKG_INT}.ChangeInternal.CHANGE_TYPE_CONTAINMENT);
#end##                                       ## opposite
  }  
  // ----------------------------------------  

  // ----------------------------------------
  // set the new value
  // ----------------------------------------
  ${prop.typeName} oldValue = this.__vmf_prop_${prop.name};
  this.__vmf_prop_${prop.name} = ${prop.name};
  // ----------------------------------------

  // ----------------------------------------
  // fire property changed event
  // ----------------------------------------
  this._vmf_firePropertyChangeIfListenersArePresent("${prop.name}", oldValue, this.__vmf_prop_${prop.name});
  //this._vmf_firePropertyChangeIfListenersArePresent("${oppositeRefProp.name}", refOldVal, null, ${VMFPKG_INT}.ChangeInternal.CHANGE_TYPE_CROSS_REF);
  // ----------------------------------------
#end