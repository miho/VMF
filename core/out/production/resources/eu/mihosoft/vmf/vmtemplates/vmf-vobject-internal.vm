#*
 * Copyright 2017-2019 Michael Hoffer <info@michaelhoffer.de>. All rights reserved.
 * Copyright 2017-2019 Goethe Center for Scientific Computing, University Frankfurt. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * If you use this software for scientific research then please cite the following publication(s):
 *
 * M. Hoffer, C. Poliwoda, & G. Wittum. (2013). Visual reflection library:
 * a framework for declarative GUI programming on the Java platform.
 * Computing and Visualization in Science, 2013, 16(4),
 * 181â€“192. http://doi.org/10.1007/s00791-014-0230-y
 *#
package ${packageName};

// vmf imports
#set($VMFPKG="${VMF_RUNTIME_API_PKG}.${VMF_CORE_PKG_EXT}")
#set($VMFPKG_INT="${VMF_RUNTIME_API_PKG}.${VMF_CORE_PKG_EXT}.internal")
//import ${VMF_RUNTIME_API_PKG}.${VMF_CORE_PKG_EXT}.*;

// property types imports
#foreach( $import in $type.imports )
import $import;
#end

// interface

/**
 * Internal interface. Don't rely on this API.
 */
interface VObjectInternal extends ${VMFPKG}.VObject {

  /**
   * Returns the type id of this class.
   */
   int _vmf_getTypeId();

  /**
   * Returns the names of the properties defined in this type/object.
   */
   public String[] _vmf_getPropertyNames();

  /**
   * Returns the types of the properties defined in this type/object.
   */
   public int[] _vmf_getPropertyTypes();

   /**
    * Returns values of properties by id (calls getter methods).
    */
   public Object _vmf_getPropertyValueById(int propertyId);

  /**
   * Returns the indices of all properties with model types or collections
   * that contain model instances.
   */
   public int[] _vmf_getIndicesOfPropertiesWithModelTypes();

  /**
   * Returns the indices of all collection properties with model element types.
   */
   public int[] _vmf_getIndicesOfPropertiesWithModelElementTypes();

   /**
    * Returns the indices of all collection properties with model element types
    * or collections that contain model instances.
    */
   public int[] _vmf_getIndicesOfPropertiesWithModelTypeOrElementTypes();

}
