#*
 * Copyright 2017-2019 Michael Hoffer <info@michaelhoffer.de>. All rights reserved.
 * Copyright 2017-2019 Goethe Center for Scientific Computing, University Frankfurt. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * If you use this software for scientific research then please cite the following publication(s):
 *
 * M. Hoffer, C. Poliwoda, & G. Wittum. (2013). Visual reflection library:
 * a framework for declarative GUI programming on the Java platform.
 * Computing and Visualization in Science, 2013, 16(4),
 * 181â€“192. http://doi.org/10.1007/s00791-014-0230-y
 *#
// --------------------------------------------------------------------
// --- declaration of delegation methods
// --------------------------------------------------------------------
## // ALL:                 ${type.implementation.delegations.size()}
## // METHODS:             ${type.implementation.methodDelegations.size()}
## // CONSTRUCTOR:         ${type.implementation.constructorDelegations.size()}
## // ONE_FOR_EACH_TYPE:   ${type.implementation.delegationsOneForEachType.size()}
#foreach( $delegate in ${type.implementation.methodDelegations})
  $delegate.methodDeclaration {

    if($delegate.varName==null) {
      $delegate.varName = new ${delegate.fullTypeName}();
      ${delegate.varName}.setCaller(this);
    }

    #if(!${delegate.isVoid()})return#end $delegate.varName.${delegate.methodName}(#foreach($p in ${delegate.paramNames})$p#if($foreach.hasNext), #end#end);
  }

#end## for each delegate
