plugins {
    id "com.gradle.plugin-publish" version "0.11.0"
    id 'com.github.hierynomus.license' version '0.16.1'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '3.0.0'
    id 'com.github.ben-manes.versions' version '0.44.0'
}

ext.commonProps = new Properties()
file(new File(projectDir.parentFile,"config/common.properties")).withInputStream { commonProps.load(it) }


sourceCompatibility = '11'
targetCompatibility = '11'

apply plugin: 'groovy'
apply from: 'gradle/publishing.gradle'

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation gradleTestKit()
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    group = ext.publishingInfo.groupId
    version = ext.publishingInfo.versionId
    website = 'https://github.com/miho/VMF-Gradle-Plugin'
    vcsUrl = 'https://github.com/miho/VMF-Gradle-Plugin'
    description = 'Gradle VMF plugin'
    tags = ['vmf', 'modeling framework']

    plugins {
        vmfPlugin {
            id = 'eu.mihosoft.vmf'
            displayName = 'Gradle VMF plugin'
        }
    }
}

// write build info to build.properties in resource folder
task writeVersionInfo() {
    doLast {
        def buildInfoCode = new File("${project.buildDir}/generated-src/vmfconstants/Constants.groovy")
        buildInfoCode.getParentFile().mkdirs()
        buildInfoCode.write("package eu.mihosoft.vmf.gradle.plugin.constants;\n"
                + "public class Constants {\n"
                + "  public static String VMF_VERSION = \"${project.commonProps.get("publication.version")}\";\n"
                + "}\n"
        )
    }
}

// add the 'vmfconstants' src dir to the folders to compile (input to groovyc)
sourceSets.main.groovy.srcDirs+=file("${project.buildDir}/generated-src/vmfconstants/")

// register the fact that we generate the 'writeVersionInfo' code first and compile after that
compileGroovy {
    dependsOn(writeVersionInfo)
}

license {
    header = rootProject.file('gradle-plugin/config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }

    ext.yearCurrent  = new java.text.SimpleDateFormat("yyyy").format(new Date())
    ext.yearSince1   = '2017'
    ext.author1 = 'Michael Hoffer <info@michaelhoffer.de>'
    ext.yearSince2   = '2017'
    ext.author2= 'Goethe Center for Scientific Computing, University Frankfurt'
    ext.yearSince3   = '2017'
    ext.author3 = 'Samuel Michaelis'

    exclude '**/*.svg'
}

// required on JDK 17 and later
tasks.withType(Test) {
    jvmArgs('--add-opens=java.base/java.lang=ALL-UNNAMED')
}


