import java.text.SimpleDateFormat

buildscript {

    ext.commonProps = new Properties()
    file(new File(projectDir.parentFile,"config/common.properties")).withInputStream { commonProps.load(it) }

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath "eu.mihosoft.vmf:vmf-gradle-plugin:${commonProps.get("publication.version")}"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.14.0'
//    id 'eu.mihosoft.vmf' version '0.2-SNAPSHOT'
}

ext.vmfPluginIntelliJIntegration = true

apply plugin: 'java'
apply plugin: 'eu.mihosoft.vmf'

idea {
    module {
        dependencies {
            implementation group: 'eu.mihosoft.vmf', name: 'vmf', version: commonProps.get("publication.version")
        }
    }
}

sourceCompatibility = '11'
targetCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.encoding = 'UTF-8'
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.vmf.tutorial01.Main'
}

wrapper {
    gradleVersion = '7.4.2'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

    testImplementation('junit:junit:4.13.1'){
        exclude group: 'org.hamcrest'
    }

    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation group: 'eu.mihosoft.vmf', name: 'vmf', version: commonProps.get("publication.version")

    implementation group: 'eu.mihosoft.vmf', name: 'vmf-runtime', version: commonProps.get("publication.version")
    implementation group: 'eu.mihosoft.jcompiler', name: 'jcompiler', version: '0.4'
    implementation group: 'org.codehaus.groovy', name: 'groovy-console', version: '2.0.1'

    implementation 'commons-jxpath:commons-jxpath:1.3'
}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClass
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }

    ext.yearCurrent  = new SimpleDateFormat("yyyy").format(new Date())
    ext.yearSince1   = '2017'
    ext.author1 = 'Michael Hoffer <info@michaelhoffer.de>'
    ext.yearSince2   = '2017'
    ext.author2= 'Goethe Center for Scientific Computing, University Frankfurt'
    ext.yearSince3   = '2017'
    ext.author3 = 'Samuel Michaelis'

    exclude '**/*.svg'
}


